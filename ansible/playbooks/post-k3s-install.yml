---
- name: Post k3s install - Setup Istio and deploy manifests
  hosts: server
  become: yes

  vars:
    istio_version: "1.22.0"
    istio_dir: "/tmp/istio-{{ istio_version }}"

  tasks:
    - name: Install apt dependencies
      apt:
        name:
          - apt-transport-https
          - curl
          - gnupg
        state: present
        update_cache: yes

    - name: Add Helm GPG key
      shell: curl https://baltocdn.com/helm/signing.asc | apt-key add -


    - name: Add Helm APT repo
      shell: echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list

    - name: Update apt and install Helm
      apt:
        name: helm
        state: present
        update_cache: yes

    - name: Add Istio Helm repo
      command: helm repo add istio https://istio-release.storage.googleapis.com/charts

    - name: Update Helm repos
      command: helm repo update

    - name: Set KUBECONFIG environment variable
      shell: export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml


    - name: Create istio-system namespace with injection enabled
      shell: |
        kubectl create namespace istio-system 
        kubectl label namespace istio-system istio-injection=enabled 
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml


    - name: Download Istio
      shell: |
        curl -L https://istio.io/downloadIstio | ISTIO_VERSION={{ istio_version }} sh -
      args:
        chdir: /tmp
        creates: "{{ istio_dir }}"

    - name: Add istioctl to PATH
      shell: |
        export PATH={{ istio_dir }}/bin:$PATH
      args:
        chdir: /tmp

    - name: Install Istio with custom ingress gateway configuration
      shell: |
        {{ istio_dir }}/bin/istioctl install \
          --set components.ingressGateways[0].name=istio-ingressgateway \
          --set components.ingressGateways[0].enabled=false -y
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Copy Istio values file to server
      copy:
        src: ../manifests/istio-values.yaml
        dest: /home/ubuntu/istio-values.yaml
        mode: '0644'
        remote_src: no


    - name: Install Istio Ingress Gateway using Helm and custom values
      command: >
        helm install istio-ingressgateway istio/gateway
        -n istio-system
        -f /home/ubuntu/istio-values.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Copy all manifest files to server
      copy:
        src: "{{ playbook_dir }}/../manifests/{{ item }}"
        dest: "/home/ubuntu/{{ item }}"
      loop:
        - python-deployment.yaml
        - nginx-config.yaml
        - nginx-deployment.yaml
        - istio-virtualservice.yaml
        - istio-gateway.yaml

      

    - name: Apply manifest files
      shell: |
        kubectl apply -f python-deployment.yaml
        kubectl apply -f nginx-config.yaml 
        kubectl apply -f nginx-deployment.yaml
        kubectl apply -f istio-virtualservice.yaml
        kubectl apply -f istio-gateway.yaml
      args:
        chdir: /home/ubuntu
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Wait for app pods to be ready
      shell: |
        kubectl rollout status deployment python-web  -n istio-system
        kubectl rollout status deployment nginx-load-balancer -n istio-system
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
