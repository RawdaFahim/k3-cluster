---
- name: Post k3s install - Setup Istio and deploy manifests
  hosts: server
  become: yes

  vars:
    istio_version: "1.22.0"
    istio_dir: "/tmp/istio-{{ istio_version }}"

  tasks:
    - name: Install apt dependencies
      apt:
        name:
          - apt-transport-https
          - curl
          - gnupg
        state: present
        update_cache: yes

    - name: Add Helm GPG key
      shell: curl https://baltocdn.com/helm/signing.asc | apt-key add -


    - name: Add Helm APT repo
      shell: echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list

    - name: Update apt and install Helm
      apt:
        name: helm
        state: present
        update_cache: yes

    - name: Add Istio Helm repo
      command: helm repo add istio https://istio-release.storage.googleapis.com/charts

    - name: Update Helm repos
      command: helm repo update

    - name: Set KUBECONFIG environment variable
      shell: export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml


    - name: Create istio-system namespace with injection enabled
      shell: |
        kubectl create namespace istio-system 
        kubectl label namespace istio-system istio-injection=enabled 
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml


    - name: Download Istio
      shell: |
        curl -L https://istio.io/downloadIstio | ISTIO_VERSION={{ istio_version }} sh -
      args:
        chdir: /tmp
        creates: "{{ istio_dir }}"

    - name: Add istioctl to PATH
      shell: |
        export PATH={{ istio_dir }}/bin:$PATH
      args:
        chdir: /tmp

    - name: Install Istio with custom ingress gateway configuration
      shell: |
        {{ istio_dir }}/bin/istioctl install \
          --set components.ingressGateways[0].name=istio-ingressgateway \
          --set meshConfig.enablePrometheusMerge=true \
          --set components.ingressGateways[0].enabled=false -y
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Copy Istio values file to server
      copy:
        src: ../manifests/istio-values.yaml
        dest: /home/ubuntu/istio-values.yaml
        mode: '0644'
        remote_src: no


    - name: Install Istio Ingress Gateway using Helm and custom values
      command: >
        helm install istio-ingressgateway istio/gateway
        -n istio-system
        -f /home/ubuntu/istio-values.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  

    - name: Copy grafana dashboard Json
      copy:
        src: "{{ playbook_dir }}/../grafana-dashboard.json"
        dest: "/tmp/grafana-dashboard.json"

    - name: Start prometheus
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.21/samples/addons/prometheus.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    - name: Add Grafana repo using Helm
      command: >
        helm repo add grafana https://grafana.github.io/helm-charts
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install Grafana using Helm
      command: >
        helm upgrade --install grafana grafana/grafana \
          --namespace istio-system \
          --set adminPassword='admin' \
          --set service.type=ClusterIP \
          --set service.port=3000 \
          --set "grafana.ini.server.root_url=http://localhost/" \
          --set "grafana.ini.server.http_port=3000"
      args:
        creates: /etc/helm/helmfile.yaml  # Modify if you have a specific check
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml


    
    - name: Copy all manifest files to server
      copy:
        src: "{{ playbook_dir }}/../manifests/{{ item }}"
        dest: "/home/ubuntu/{{ item }}"
      loop:
        - python-deployment.yaml
        - nginx-config.yaml
        - nginx-deployment.yaml
        - virtualservice.yaml
        - istio-gateway.yaml
        - service_monitor.yaml

    - name: Apply manifest files
      shell: |
        kubectl apply -f python-deployment.yaml
        kubectl apply -f nginx-config.yaml 
        kubectl apply -f nginx-deployment.yaml
        kubectl apply -f istio-gateway.yaml
        kubectl apply -f virtualservice.yaml
      args:
        chdir: /home/ubuntu
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Wait for app pods to be ready
      shell: |
        kubectl rollout status deployment python-web  -n istio-system
        kubectl rollout status deployment nginx-load-balancer -n istio-system
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml


    - name: Add Prometheus as Grafana datasource
      command: >
        curl -X POST http://{{ groups['server'][0] }}:30080/api/datasources
        -u admin:admin
        -H "Content-Type: application/json"
        -d '{"name":"Prometheus","type":"prometheus","url":"http://prometheus.istio-system.svc.cluster.local:9090","access":"proxy","basicAuth":false,"isDefault":true}'
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml



    - name: Import Grafana dashboard
      command: >
        curl -X POST http://{{ groups['server'][0] }}:30080/api/dashboards/import
        -u admin:admin
        -H Content-Type:application/json
        -d @/tmp/grafana-dashboard.json
      register: curl_output
      failed_when: curl_output.rc != 0 or '"error"' in curl_output.stdout or '"message"' in curl_output.stdout




    # - name: Print Grafana API response
    #   debug:
    #     var: curl_output.stdout



    