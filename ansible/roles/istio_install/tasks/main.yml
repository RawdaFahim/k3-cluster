# ------------------------------------------------------------------------------
# Role: istio_install
# Description:
#   Installs and configures Istio service mesh on k3s Kubernetes cluster.
#   This includes both control plane installation via `istioctl` and a custom 
#   Ingress Gateway deployed via Helm with a NodePort service.

# Tasks Performed:
#   - Adds the official Istio Helm repository and updates the repo cache
#   - Creates the target namespace (e.g., `istio-system`) with automatic sidecar injection
#   - Downloads the specified version of Istio into `/tmp` to avoid cluttering the system
#   - Installs Istio control plane using `istioctl`, with Prometheus metrics enabled
#     and the default ingress gateway explicitly disabled
#   - Renders a custom Helm values file (`ingress-values.yaml`) using a Jinja2 template
#   - Installs a NodePort-based Ingress Gateway via Helm using the rendered values file

# Notes:
#   - The custom NodePort Ingress Gateway is necessary in environments without cloud
#     load balancers (e.g., on-prem or local VMs).
#   - The rendered `ingress-values.yaml` file is stored temporarily in `/tmp` on the host.
# ------------------------------------------------------------------------------


- name: Add Istio Helm repo
  command: helm repo add istio https://istio-release.storage.googleapis.com/charts

- name: Update Helm repos
  command: helm repo update

- name: Create {{ k3s_namespace }} namespace with injection enabled
  shell: |
    kubectl create namespace {{ k3s_namespace }} 
    kubectl label namespace {{ k3s_namespace }} istio-injection=enabled 

- name: Download Istio
  shell: curl -L https://istio.io/downloadIstio | ISTIO_VERSION={{ istio_version }} sh -
  args:
    chdir: /tmp
    creates: "{{ istio_dir }}"
    
- name: Add istioctl to PATH
  shell: |
    export PATH={{ istio_dir }}/bin:$PATH
  args:
    chdir: /tmp


- name: Install Istio with custom ingress gateway configuration
  shell: |
    {{ istio_dir }}/bin/istioctl install \
      --set components.ingressGateways[0].name={{ istio.ingress_gateway.name }}  \
      --set meshConfig.enablePrometheusMerge=true \
      --set components.ingressGateways[0].enabled=false -y
  args:
    executable: /bin/bash



- name: Template values file for ingress
  template:
    src: ingress-values.yaml.j2
    dest: /tmp/ingress-values.yaml
    
- name: Show rendered Helm values
  command: cat /tmp/ingress-values.yaml
  register: rendered_values

- name: Debug rendered values
  debug:
    msg: "{{ rendered_values.stdout }}"

- name: Deploy IngressGateway via Helm
  kubernetes.core.helm:
    name: "{{ istio.ingress_gateway.name }}"
    chart_ref: istio/gateway
    release_namespace: "{{ k3s_namespace }}"
    values_files:
      - /tmp/ingress-values.yaml

